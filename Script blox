local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Crear ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MockHohoHub"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Fondo principal
local frame = Instance.new("Frame")
frame.Name = "HubFrame"
frame.Size = UDim2.new(0, 380, 0, 240)
frame.Position = UDim2.new(0.5, -190, 0.5, -120)
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.BackgroundTransparency = 0.12
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Título
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, -20, 0, 36)
title.Position = UDim2.new(0, 10, 0, 8)
title.BackgroundTransparency = 1
title.Text = "Mock Hub — Solo Educativo"
title.TextScaled = true
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.fromRGB(240,240,240)
title.Parent = frame

-- Función helper para crear botones
local function makeButton(parent, text, posY)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0, 160, 0, 32)
	btn.Position = UDim2.new(0, 12, 0, posY)
	btn.BackgroundColor3 = Color3.fromRGB(45,45,55)
	btn.TextColor3 = Color3.fromRGB(230,230,230)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 16
	btn.Text = text
	btn.Parent = parent
	return btn
end

-- Función helper para crear toggles (visual)
local function makeToggle(parent, text, posY)
	local lbl = Instance.new("TextLabel")
	lbl.Size = UDim2.new(0, 180, 0, 28)
	lbl.Position = UDim2.new(0, 200, 0, posY)
	lbl.BackgroundTransparency = 1
	lbl.TextColor3 = Color3.fromRGB(230,230,230)
	lbl.Font = Enum.Font.Gotham
	lbl.TextSize = 16
	lbl.Text = text
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.Parent = parent

	local toggle = Instance.new("TextButton")
	toggle.Size = UDim2.new(0, 44, 0, 24)
	toggle.Position = UDim2.new(0, 320, 0, posY)
	toggle.BackgroundColor3 = Color3.fromRGB(80,80,90)
	toggle.Text = "OFF"
	toggle.Font = Enum.Font.Gotham
	toggle.TextSize = 14
	toggle.TextColor3 = Color3.fromRGB(230,230,230)
	toggle.Parent = parent

	return toggle
end

-- Notificador simple (cliente)
local function notify(title, text)
	StarterGui:SetCore("SendNotification", {
		Title = title;
		Text = text;
		Duration = 3;
	})
end

-- Crear botones y toggles de ejemplo
local btn1 = makeButton(frame, "Abrir perfil (simulado)", 56)
local btn2 = makeButton(frame, "Guardar configuración", 96)
local toggle1 = makeToggle(frame, "Modo de prueba local", 140)
local toggle2 = makeToggle(frame, "Mostrar FPS (simulado)", 176)

-- Estados locales
local state = {
	testMode = false,
	showFPS = false,
}

-- Conexiones (solo acciones locales/educativas)
btn1.MouseButton1Click:Connect(function()
	notify("Perfil", "Aquí iría la interfaz de perfil (simulado).")
end)

btn2.MouseButton1Click:Connect(function()
	notify("Configuración", "Configuración guardada localmente (simulado).")
end)

toggle1.MouseButton1Click:Connect(function()
	state.testMode = not state.testMode
	toggle1.Text = state.testMode and "ON" or "OFF"
	notify("Modo de prueba", state.testMode and "Activado (local)" or "Desactivado")
end)

toggle2.MouseButton1Click:Connect(function()
	state.showFPS = not state.showFPS
	toggle2.Text = state.showFPS and "ON" or "OFF"
	notify("FPS", state.showFPS and "Mostrando FPS (simulado)" or "Ocultando FPS")
end)

-- Cerrar con tecla (Ejemplo de UX)
local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.Backspace then
		screenGui.Enabled = not screenGui.Enabled
		notify("Hub", screenGui.Enabled and "Mostrado" or "Oculto")
	end
end)
